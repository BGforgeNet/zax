name: build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/checkout@v2

      - name: Set dev version
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          echo "VERSION = \"git$git_hash\"" > version.py
        shell: bash

      - name: Set release version
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          version="$(echo $GITHUB_REF | sed 's|refs\/tags\/||')"
          echo "VERSION = \"$version\"" > version.py
        shell: bash

      - name: Build
        run: |
          set -xeu -o pipefail
          pip install poetry
          poetry install
          poetry shell
          cd zax
          pyinstaller zax.spec
        shell: bash

      - name: Upload | lin
        uses: actions/upload-artifact@v2
        if: "!startsWith(github.ref, 'refs/tags/') && (matrix.os == 'ubuntu-latest')"
        with:
          name: zax-linux
          path: dist/zax

      - name: Upload | win
        uses: actions/upload-artifact@v2
        if: "!startsWith(github.ref, 'refs/tags/') && (matrix.os == 'windows-latest')"
        with:
          name: zax.exe
          path: dist/zax.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/zax.exe
            dist/zax
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
